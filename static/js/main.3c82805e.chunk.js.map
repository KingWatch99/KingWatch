{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/MovieControls.js","components/MovieCard.js","components/WatchList.js","components/Watched.js","components/ResultCard.js","components/Add.js","components/Home.js","components/Watch.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","state","action","type","watchlist","payload","filter","movie","id","watched","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","addMovieToWatchlist","removeMovieFromWatchlist","addMovieToWatched","moveToWatchlist","removeFromWatched","children","MovieControls","useContext","onClick","MovieCard","src","poster_path","alt","title","WatchList","length","map","key","Watched","ResultCard","storedMovie","find","o","storedMovieWatched","watchlistDisabled","watchedDisabled","img","name","disabled","Add","useState","query","setQuery","results","setResults","placeholder","onChange","e","preventDefault","target","fetch","then","res","json","data","Home","jsonData","loading","errors","setState","this","original_title","React","Component","Watch","link","setLink","movieName","useParams","a","response","text","htmlLink","getData","url","controls","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"+OAGaA,EAAS,WACpB,OACE,gCACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,SACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,cAGF,wBAAID,UAAU,aACZ,4BACE,kBAAC,IAAD,CAAMC,GAAG,cAAT,QAGF,4BACE,kBAAC,IAAD,CAAMA,GAAG,cAAT,eAGF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,YAGF,4BACE,kBAAC,IAAD,CAAMA,GAAG,OAAOD,UAAU,gBAA1B,e,uBC1BC,WAACE,EAAOC,GACrB,OAAQA,EAAOC,MACb,IAAK,yBACH,OAAO,2BACFF,GADL,IAEEG,UAAU,CAAEF,EAAOG,SAAV,mBAAsBJ,EAAMG,cAEzC,IAAK,8BACH,OAAO,2BACFH,GADL,IAEEG,UAAWH,EAAMG,UAAUE,QACzB,SAACC,GAAD,OAAWA,EAAMC,KAAON,EAAOG,aAGrC,IAAK,uBACH,OAAO,2BACFJ,GADL,IAEEG,UAAWH,EAAMG,UAAUE,QACzB,SAACC,GAAD,OAAWA,EAAMC,KAAON,EAAOG,QAAQG,MAEzCC,QAAQ,CAAEP,EAAOG,SAAV,mBAAsBJ,EAAMQ,YAEvC,IAAK,oBACH,OAAO,2BACFR,GADL,IAEEQ,QAASR,EAAMQ,QAAQH,QACrB,SAACC,GAAD,OAAWA,EAAMC,KAAON,EAAOG,QAAQG,MAEzCJ,UAAU,CAAEF,EAAOG,SAAV,mBAAsBJ,EAAMG,cAEzC,IAAK,sBACH,OAAO,2BACFH,GADL,IAEEQ,QAASR,EAAMQ,QAAQH,QAAO,SAACC,GAAD,OAAWA,EAAMC,KAAON,EAAOG,aAEjE,QACE,OAAOJ,IChCPS,EAAe,CACnBN,UAAWO,aAAaC,QAAQ,aAC5BC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,GACJH,QAASE,aAAaC,QAAQ,WAC1BC,KAAKC,MAAMH,aAAaC,QAAQ,YAChC,IAIOG,EAAgBC,wBAAcN,GAG9BO,EAAiB,SAACC,GAAW,IAAD,EACbC,qBAAWC,EAAYV,GADV,mBAChCT,EADgC,KACzBoB,EADyB,KAGvCC,qBAAU,WACRX,aAAaY,QAAQ,YAAaV,KAAKW,UAAUvB,EAAMG,YACvDO,aAAaY,QAAQ,UAAWV,KAAKW,UAAUvB,EAAMQ,YACpD,CAACR,IAuBJ,OACE,kBAACc,EAAcU,SAAf,CACEC,MAAO,CACLtB,UAAWH,EAAMG,UACjBK,QAASR,EAAMQ,QACfkB,oBAzBsB,SAACpB,GAC3Bc,EAAS,CAAElB,KAAM,yBAA0BE,QAASE,KAyBhDqB,yBAtB2B,SAACpB,GAChCa,EAAS,CAAElB,KAAM,8BAA+BE,QAASG,KAsBrDqB,kBAnBoB,SAACtB,GACzBc,EAAS,CAAElB,KAAM,uBAAwBE,QAASE,KAmB9CuB,gBAhBkB,SAACvB,GACvBc,EAAS,CAAElB,KAAM,oBAAqBE,QAASE,KAgB3CwB,kBAboB,SAACvB,GACzBa,EAAS,CAAElB,KAAM,sBAAuBE,QAASG,OAe9CU,EAAMc,WCvDAC,EAAgB,SAAC,GAAqB,IAAnB9B,EAAkB,EAAlBA,KAAMI,EAAY,EAAZA,MAAY,EAM5C2B,qBAAWnB,GAJba,EAF8C,EAE9CA,yBACAC,EAH8C,EAG9CA,kBACAC,EAJ8C,EAI9CA,gBACAC,EAL8C,EAK9CA,kBAGF,OACI,yBAAKhC,UAAU,uBACH,cAATI,GACG,oCACE,4BAAQJ,UAAU,WAAWoC,QAAS,kBAAMN,EAAkBtB,KAC5D,uBAAGR,UAAU,sBAGf,4BACIA,UAAU,WACVoC,QAAS,kBAAMP,EAAyBrB,EAAMC,MAEhD,uBAAGT,UAAU,wBAKX,YAATI,GACG,oCACE,4BAAQJ,UAAU,WAAWoC,QAAS,kBAAML,EAAgBvB,KAC1D,uBAAGR,UAAU,4BAGf,4BACIA,UAAU,WACVoC,QAAS,kBAAMJ,EAAkBxB,EAAMC,MAEzC,uBAAGT,UAAU,0BCnChBqC,EAAY,SAAC,GAAqB,IAAnB7B,EAAkB,EAAlBA,MAAOJ,EAAW,EAAXA,KAC/B,OACI,yBAAKJ,UAAU,cACX,yBAAKA,UAAU,YAEX,yBACIsC,IAAG,yCAAoC9B,EAAM+B,aAC7CC,IAAG,UAAKhC,EAAMiC,MAAX,aAIX,kBAAC,EAAD,CAAerC,KAAMA,EAAMI,MAAOA,MCVjCkC,EAAY,WAAO,IACtBrC,EAAc8B,qBAAWnB,GAAzBX,UAER,OACE,yBAAKL,UAAU,cACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,WAAd,cAEA,0BAAMA,UAAU,cACbK,EAAUsC,OADb,IAC2C,IAArBtC,EAAUsC,OAAe,QAAU,WAI1DtC,EAAUsC,OAAS,EAClB,yBAAK3C,UAAU,cACZK,EAAUuC,KAAI,SAACpC,GAAD,OACb,kBAAC,EAAD,CAAWA,MAAOA,EAAOqC,IAAKrC,EAAMC,GAAIL,KAAK,kBAIjD,wBAAIJ,UAAU,aAAd,wCCrBG8C,EAAU,WAAO,IACpBpC,EAAYyB,qBAAWnB,GAAvBN,QAER,OACE,yBAAKV,UAAU,cACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,WAAd,kBAEA,0BAAMA,UAAU,cACbU,EAAQiC,OADX,IACuC,IAAnBjC,EAAQiC,OAAe,QAAU,WAItDjC,EAAQiC,OAAS,EAChB,yBAAK3C,UAAU,cACZU,EAAQkC,KAAI,SAACpC,GAAD,OACX,kBAAC,EAAD,CAAWA,MAAOA,EAAOqC,IAAKrC,EAAMC,GAAIL,KAAK,gBAIjD,wBAAIJ,UAAU,aAAd,wCCnBG+C,G,MAAa,SAAC,GAAe,IAAbvC,EAAY,EAAZA,MAAY,EAMnC2B,qBAAWnB,GAJbY,EAFqC,EAErCA,oBACAE,EAHqC,EAGrCA,kBACAzB,EAJqC,EAIrCA,UACAK,EALqC,EAKrCA,QAGEsC,EAAc3C,EAAU4C,MAAK,SAACC,GAAD,OAAOA,EAAEzC,KAAOD,EAAMC,MACnD0C,EAAqBzC,EAAQuC,MAAK,SAACC,GAAD,OAAOA,EAAEzC,KAAOD,EAAMC,MAEtD2C,IAAoBJ,KAEtBG,EAIEE,IAAkBF,EAExB,OACE,yBAAKnD,UAAU,eACb,yBAAKA,UAAU,kBACZQ,EAAM8C,IACL,yBACEhB,IAAK9B,EAAM8C,IACXd,IAAG,UAAKhC,EAAM+C,KAAX,aAGL,yBAAKvD,UAAU,mBAInB,yBAAKA,UAAU,QACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,SAASQ,EAAM+C,MAC7B,wBAAIvD,UAAU,kBAKhB,yBAAKA,UAAU,YACb,4BACEA,UAAU,MACVwD,SAAUJ,EACVhB,QAAS,kBAAMR,EAAoBpB,KAHrC,oBAQA,4BACIR,UAAU,MACVwD,SAAUH,EACVjB,QAAS,kBAAMN,EAAkBtB,KAHrC,kBAOA,kBAAC,IAAD,CAAMP,GAAI,UAAYO,EAAMC,GAAK,IAAMD,EAAM+C,MAC3C,4BACIvD,UAAU,OADd,cC5DCyD,EAAM,WAAO,IAAD,EACGC,mBAAS,IADZ,mBAChBC,EADgB,KACTC,EADS,OAEOF,mBAAS,IAFhB,mBAEhBG,EAFgB,KAEPC,EAFO,KAsBvB,OACE,yBAAK9D,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBACb,2BACEI,KAAK,OACL2D,YAAY,qBACZpC,MAAOgC,EACPK,SA3BK,SAACC,GAChBA,EAAEC,iBAEFN,EAASK,EAAEE,OAAOxC,OAElByC,MAAM,6CAAD,OAC0CH,EAAEE,OAAOxC,QAErD0C,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAEHV,EADU,MAARU,GAAyB,SAATA,EACPA,EAEA,WAkBVX,EAAQlB,OAAS,GAChB,wBAAI3C,UAAU,WACX6D,EAAQjB,KAAI,SAACpC,GAAD,OACX,wBAAIqC,IAAKrC,EAAMC,IACb,kBAAC,EAAD,CAAYD,MAAOA,a,yDCtCxBiE,EAAb,kDACI,WAAYtD,GAAQ,IAAD,8BACf,cAAMA,IACDjB,MAAQ,CACTwE,SAAU,KACVC,SAAS,GAJE,EADvB,qMAWcP,MAAM,iGAGPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACEA,EAAKI,OAGN,EAAKC,SAAS,CAACH,SAAU,KAFzB,EAAKG,SAAS,CAAEH,SAAUF,EAAKX,aAjBnD,gIAyBQ,OACI,yBAAK7D,UAAU,cACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,WAAd,mBAGoB,MAAvB8E,KAAK5E,MAAMwE,SACR,yBAAK1E,UAAU,cACV8E,KAAK5E,MAAMwE,SAAS9B,KAAI,SAACpC,GAAD,OACrB,kBAAC,IAAD,CAAMP,GAAI,UAAYO,EAAMC,GAAK,IAAMD,EAAMuE,gBACzC,kBAAC,EAAD,CAAWvE,MAAOA,EAAOqC,IAAKrC,EAAMC,GAAIL,KAAK,UAKzD,yCAzCxB,GAA0B4E,IAAMC,W,+BCAnBC,EAAQ,WAAO,IAAD,EAECxB,qBAFD,mBAEhByB,EAFgB,KAEVC,EAFU,KAGlBC,EAAaC,cAAbD,UAHkB,4CAKvB,sBAAAE,EAAA,sDACInB,MAAM,4CAA4CiB,GAC7ChB,MAAK,SAACmB,GACH,OAAOA,EAASC,UAEnBpB,MAAK,SAACqB,GACHN,EAAQM,MANpB,4CALuB,sBAkBvB,OAJAnE,qBAAW,YAdY,mCAenBoE,KACD,IAGC,yBAAK3F,UAAU,cACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,WAAWqF,IAE7B,uBAAGrF,UAAU,WAAWmF,GACxB,kBAAC,IAAD,CAAaS,IAAKT,EAAMU,UAAQ,OCejCC,MA/Bf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,QACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,yBACV,kBAAC,EAAD,WCxBQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxC,MAAK,SAAAyC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3c82805e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Header = () => {\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"inner-content\">\n          <div className=\"brand\">\n            <Link to=\"/\">KingWatch</Link>\n          </div>\n\n          <ul className=\"nav-links\">\n            <li>\n              <Link to=\"/watchList\">New</Link>\n            </li>\n\n            <li>\n              <Link to=\"/watchList\">Watch List</Link>\n            </li>\n\n            <li>\n              <Link to=\"/watched\">Watched</Link>\n            </li>\n\n            <li>\n              <Link to=\"/add\" className=\"btn btn-main\">\n                + Add\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </header>\n  );\n};\n","export default (state, action) => {\n  switch (action.type) {\n    case \"ADD_MOVIE_TO_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: [action.payload, ...state.watchlist],\n      };\n    case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload\n        ),\n      };\n    case \"ADD_MOVIE_TO_WATCHED\":\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload.id\n        ),\n        watched: [action.payload, ...state.watched],\n      };\n    case \"MOVE_TO_WATCHLIST\":\n      return {\n        ...state,\n        watched: state.watched.filter(\n          (movie) => movie.id !== action.payload.id\n        ),\n        watchlist: [action.payload, ...state.watchlist],\n      };\n    case \"REMOVE_FROM_WATCHED\":\n      return {\n        ...state,\n        watched: state.watched.filter((movie) => movie.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// initial state\nconst initialState = {\n  watchlist: localStorage.getItem(\"watchlist\")\n    ? JSON.parse(localStorage.getItem(\"watchlist\"))\n    : [],\n  watched: localStorage.getItem(\"watched\")\n    ? JSON.parse(localStorage.getItem(\"watched\"))\n    : [],\n};\n\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// provider components\nexport const GlobalProvider = (props) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    localStorage.setItem(\"watchlist\", JSON.stringify(state.watchlist));\n    localStorage.setItem(\"watched\", JSON.stringify(state.watched));\n  }, [state]);\n\n  // actions\n  const addMovieToWatchlist = (movie) => {\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\n  };\n\n  const removeMovieFromWatchlist = (id) => {\n    dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id });\n  };\n\n  const addMovieToWatched = (movie) => {\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHED\", payload: movie });\n  };\n\n  const moveToWatchlist = (movie) => {\n    dispatch({ type: \"MOVE_TO_WATCHLIST\", payload: movie });\n  };\n\n  const removeFromWatched = (id) => {\n    dispatch({ type: \"REMOVE_FROM_WATCHED\", payload: id });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        watchlist: state.watchlist,\n        watched: state.watched,\n        addMovieToWatchlist,\n        removeMovieFromWatchlist,\n        addMovieToWatched,\n        moveToWatchlist,\n        removeFromWatched,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const MovieControls = ({ type, movie }) => {\n  const {\n    removeMovieFromWatchlist,\n    addMovieToWatched,\n    moveToWatchlist,\n    removeFromWatched,\n  } = useContext(GlobalContext);\n\n  return (\n      <div className=\"inner-card-controls\">\n        {type === \"watchlist\" && (\n            <>\n              <button className=\"ctrl-btn\" onClick={() => addMovieToWatched(movie)}>\n                <i className=\"fa-fw far fa-eye\"/>\n              </button>\n\n              <button\n                  className=\"ctrl-btn\"\n                  onClick={() => removeMovieFromWatchlist(movie.id)}\n              >\n                <i className=\"fa-fw fa fa-times\"/>\n              </button>\n            </>\n        )}\n\n        {type === \"watched\" && (\n            <>\n              <button className=\"ctrl-btn\" onClick={() => moveToWatchlist(movie)}>\n                <i className=\"fa-fw far fa-eye-slash\"/>\n              </button>\n\n              <button\n                  className=\"ctrl-btn\"\n                  onClick={() => removeFromWatched(movie.id)}\n              >\n                <i className=\"fa-fw fa fa-times\"/>\n              </button>\n            </>\n        )}\n      </div>\n  );\n};\n","import React from \"react\";\nimport { MovieControls } from \"./MovieControls\";\n\nexport const MovieCard = ({ movie, type }) => {\n    return (\n        <div className=\"movie-card\">\n            <div className=\"overlay\"/>\n\n                <img\n                    src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                    alt={`${movie.title} Poster`}\n                />\n\n\n            <MovieControls type={type} movie={movie} />\n        </div>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { MovieCard } from \"./MovieCard\";\n\nexport const WatchList = () => {\n  const { watchlist } = useContext(GlobalContext);\n\n  return (\n    <div className=\"movie-page\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1 className=\"heading\">Watch List</h1>\n\n          <span className=\"count-pill\">\n            {watchlist.length} {watchlist.length === 1 ? \"Movie\" : \"Movies\"}\n          </span>\n        </div>\n\n        {watchlist.length > 0 ? (\n          <div className=\"movie-grid\">\n            {watchlist.map((movie) => (\n              <MovieCard movie={movie} key={movie.id} type=\"watchlist\" />\n            ))}\n          </div>\n        ) : (\n          <h2 className=\"no-movies\">No movies in your list! Add some!</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { MovieCard } from \"./MovieCard\";\n\nexport const Watched = () => {\n  const { watched } = useContext(GlobalContext);\n\n  return (\n    <div className=\"movie-page\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1 className=\"heading\">Watched Movies</h1>\n\n          <span className=\"count-pill\">\n            {watched.length} {watched.length === 1 ? \"Movie\" : \"Movies\"}\n          </span>\n        </div>\n\n        {watched.length > 0 ? (\n          <div className=\"movie-grid\">\n            {watched.map((movie) => (\n              <MovieCard movie={movie} key={movie.id} type=\"watched\" />\n            ))}\n          </div>\n        ) : (\n          <h2 className=\"no-movies\">No movies in your list! Add some!</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport Moment from \"react-moment\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport {MovieCard} from \"./MovieCard\";\nimport {Link} from \"react-router-dom\";\n\nexport const ResultCard = ({ movie }) => {\n  const {\n    addMovieToWatchlist,\n    addMovieToWatched,\n    watchlist,\n    watched,\n  } = useContext(GlobalContext);\n\n  let storedMovie = watchlist.find((o) => o.id === movie.id);\n  let storedMovieWatched = watched.find((o) => o.id === movie.id);\n\n  const watchlistDisabled = storedMovie\n    ? true\n    : storedMovieWatched\n    ? true\n    : false;\n\n  const watchedDisabled = storedMovieWatched ? true : false;\n\n  return (\n    <div className=\"result-card\">\n      <div className=\"poster-wrapper\">\n        {movie.img ? (\n          <img\n            src={movie.img}\n            alt={`${movie.name} Poster`}\n          />\n        ) : (\n          <div className=\"filler-poster\" />\n        )}\n      </div>\n\n      <div className=\"info\">\n        <div className=\"header\">\n          <h3 className=\"title\">{movie.name}</h3>\n          <h4 className=\"release-date\">\n            {/*<Moment format=\"YYYY\">2002</Moment> Needs to be added */}\n          </h4>\n        </div>\n\n        <div className=\"controls\">\n          <button\n            className=\"btn\"\n            disabled={watchlistDisabled}\n            onClick={() => addMovieToWatchlist(movie)}\n          >\n            Add to Watchlist\n          </button>\n\n          <button\n              className=\"btn\"\n              disabled={watchedDisabled}\n              onClick={() => addMovieToWatched(movie)}\n          >\n            Add to Watched\n          </button>\n          <Link to={\"/watch/\" + movie.id + \"/\" + movie.name}>\n            <button\n                className=\"btn\"\n            >\n              Play\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ResultCard } from \"./ResultCard\";\n\nexport const Add = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  const onChange = (e) => {\n    e.preventDefault();\n\n    setQuery(e.target.value);\n\n    fetch(\n      `https://kingwatchsearch.kingwatch.repl.co/${e.target.value}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data != null || data !== \"null\") {\n          setResults(data);\n        } else {\n          setResults([]);\n        }\n      });\n  };\n\n  return (\n    <div className=\"add-page\">\n      <div className=\"container\">\n        <div className=\"add-content\">\n          <div className=\"input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Search for a movie\"\n              value={query}\n              onChange={onChange}\n            />\n          </div>\n\n          {results.length > 0 && (\n            <ul className=\"results\">\n              {results.map((movie) => (\n                <li key={movie.id}>\n                  <ResultCard movie={movie} />\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { MovieCard } from \"./MovieCard\";\nimport {Link} from \"react-router-dom\";\n\nexport class Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            jsonData: null,\n            loading: false\n        }\n    }\n\n\n    async componentDidMount(){\n        await fetch(\n            `https://api.themoviedb.org/3/trending/all/day?api_key=d84036d2bbee55b9edda524fe3ec0993&page=1`\n        )\n            .then((res) => res.json())\n            .then((data) => {\n                if (!data.errors) {\n                    this.setState({ jsonData: data.results });\n                } else {\n                    this.setState({jsonData: []});\n                }\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"movie-page\">\n                <div className=\"container\">\n                    <div className=\"header\">\n                        <h1 className=\"heading\">Watched Movies</h1>\n                    </div>\n\n                    {this.state.jsonData != null ? (\n                        <div className=\"movie-grid\">\n                            {this.state.jsonData.map((movie) => (\n                                <Link to={\"/watch/\" + movie.id + \"/\" + movie.original_title}>\n                                    <MovieCard movie={movie} key={movie.id} type=\"\" />\n                                </Link>\n                            ))}\n                        </div>\n                    ) : (\n                        <h2>Nav</h2>\n                    )}\n                </div>\n            </div>\n        );\n    }\n};\n","import React, {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport ReactPlayer from 'react-player'\n\nexport const Watch = () => {\n\n    const [link, setLink] = useState();\n    let {movieName} = useParams();\n\n    async function getData(){\n        fetch('https://kingwatchmovie.kingwatch.repl.co/'+movieName)\n            .then((response) => {\n                return response.text();\n            })\n            .then((htmlLink) => {\n                setLink(htmlLink)\n            });\n    }\n    useEffect( () => {\n        getData()\n    }, []);\n    {/**/}\n    return (\n        <div className=\"movie-page\">\n            <div className=\"container\">\n                <div className=\"header\">\n                    <h1 className=\"heading\">{movieName}</h1>\n                </div>\n                <p className=\"heading\">{link}</p>\n                <ReactPlayer url={link} controls/>\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport {WatchList} from \"./components/WatchList\";\nimport { Watched } from \"./components/Watched\";\nimport { Add } from \"./components/Add\";\nimport { Home } from \"./components/Home\";\nimport \"./App.css\";\nimport \"./lib/font-awesome/css/all.min.css\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\nimport {Watch} from \"./components/Watch\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Router>\n        <Header />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/KingWatch\">\n            <Home />\n          </Route>\n          <Route exact path=\"/watchList\">\n            <WatchList />\n          </Route>\n          <Route path=\"/add\">\n            <Add />\n          </Route>\n          <Route path=\"/watched\">\n            <Watched />\n          </Route>\n          <Route path=\"/watch/:id/:movieName\">\n            <Watch />\n          </Route>\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}